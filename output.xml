<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 2.9 (Python 3.6.3 on win32)" generated="20171218 22:45:43.634">
<suite id="s1" name="Group Scenarios" source="C:\Users\Sasha\Documents\GitHub\python_training\rf\group_scenarios.robot">
<kw name="Init Fixtures" library="rf.AddressBook" type="setup">
<status status="PASS" starttime="20171218 22:45:43.883" endtime="20171218 22:45:49.150"></status>
</kw>
<test id="s1-t1" name="Add new group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20171218 22:45:49.154" level="INFO">${old_list} = [2:New group;New header;footer1(ed), 3:group1(ed);header1(ed);footer1(ed), 5:group1(ed);header1(ed);footer1(ed), 6:group1(ed);header1(ed);footer1(ed), 7:New group;header1;footer1, 9:group1(ed);header1...</msg>
<status status="PASS" starttime="20171218 22:45:49.152" endtime="20171218 22:45:49.154"></status>
</kw>
<kw name="New Group" library="rf.AddressBook">
<arguments>
<arg>name4</arg>
<arg>header4</arg>
<arg>footer4</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20171218 22:45:49.157" level="INFO">${group} = None:name4;header4;footer4</msg>
<status status="PASS" starttime="20171218 22:45:49.156" endtime="20171218 22:45:49.157"></status>
</kw>
<kw name="Create Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20171218 22:45:49.157" endtime="20171218 22:45:50.593"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20171218 22:45:50.597" level="INFO">${new_list} = [2:New group;New header;footer1(ed), 3:group1(ed);header1(ed);footer1(ed), 5:group1(ed);header1(ed);footer1(ed), 6:group1(ed);header1(ed);footer1(ed), 7:New group;header1;footer1, 9:group1(ed);header1...</msg>
<status status="PASS" starttime="20171218 22:45:50.593" endtime="20171218 22:45:50.597"></status>
</kw>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20171218 22:45:50.598" endtime="20171218 22:45:50.598"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20171218 22:45:50.599" endtime="20171218 22:45:50.601"></status>
</kw>
<status status="PASS" starttime="20171218 22:45:49.151" endtime="20171218 22:45:50.602" critical="yes"></status>
</test>
<test id="s1-t2" name="Delete group">
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${old_list}</var>
</assign>
<msg timestamp="20171218 22:45:50.608" level="INFO">${old_list} = [2:New group;New header;footer1(ed), 3:group1(ed);header1(ed);footer1(ed), 5:group1(ed);header1(ed);footer1(ed), 6:group1(ed);header1(ed);footer1(ed), 7:New group;header1;footer1, 9:group1(ed);header1...</msg>
<status status="PASS" starttime="20171218 22:45:50.604" endtime="20171218 22:45:50.608"></status>
</kw>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${old_list}</arg>
</arguments>
<assign>
<var>${len}</var>
</assign>
<msg timestamp="20171218 22:45:50.610" level="INFO">Length is 75</msg>
<msg timestamp="20171218 22:45:50.610" level="INFO">${len} = 75</msg>
<status status="PASS" starttime="20171218 22:45:50.609" endtime="20171218 22:45:50.610"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>random.randrange(${len})</arg>
<arg>random</arg>
</arguments>
<assign>
<var>${index}</var>
</assign>
<msg timestamp="20171218 22:45:50.622" level="INFO">${index} = 45</msg>
<status status="PASS" starttime="20171218 22:45:50.611" endtime="20171218 22:45:50.622"></status>
</kw>
<kw name="Get From List" library="Collections">
<doc>Returns the value specified with an ``index`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${index}</arg>
</arguments>
<assign>
<var>${group}</var>
</assign>
<msg timestamp="20171218 22:45:50.624" level="INFO">${group} = 97:name;header G,)KN,f|cK;footer[</msg>
<status status="PASS" starttime="20171218 22:45:50.623" endtime="20171218 22:45:50.624"></status>
</kw>
<kw name="Delete Group" library="rf.AddressBook">
<arguments>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20171218 22:45:50.624" endtime="20171218 22:45:51.049"></status>
</kw>
<kw name="Get Group List" library="rf.AddressBook">
<assign>
<var>${new_list}</var>
</assign>
<msg timestamp="20171218 22:45:51.054" level="INFO">${new_list} = [2:New group;New header;footer1(ed), 3:group1(ed);header1(ed);footer1(ed), 5:group1(ed);header1(ed);footer1(ed), 6:group1(ed);header1(ed);footer1(ed), 7:New group;header1;footer1, 9:group1(ed);header1...</msg>
<status status="PASS" starttime="20171218 22:45:51.050" endtime="20171218 22:45:51.054"></status>
</kw>
<kw name="Remove Values From List" library="Collections">
<doc>Removes all occurrences of given ``values`` from ``list``.</doc>
<arguments>
<arg>${old_list}</arg>
<arg>${group}</arg>
</arguments>
<status status="PASS" starttime="20171218 22:45:51.054" endtime="20171218 22:45:51.055"></status>
</kw>
<kw name="Group Lists Should Be Equal" library="rf.AddressBook">
<arguments>
<arg>${new_list}</arg>
<arg>${old_list}</arg>
</arguments>
<status status="PASS" starttime="20171218 22:45:51.056" endtime="20171218 22:45:51.057"></status>
</kw>
<status status="PASS" starttime="20171218 22:45:50.603" endtime="20171218 22:45:51.058" critical="yes"></status>
</test>
<kw name="Destroy Fixtures" library="rf.AddressBook" type="teardown">
<status status="PASS" starttime="20171218 22:45:51.059" endtime="20171218 22:45:52.224"></status>
</kw>
<status status="PASS" starttime="20171218 22:45:43.637" endtime="20171218 22:45:52.224"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="0">Critical Tests</stat>
<stat pass="2" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" id="s1" name="Group Scenarios">Group Scenarios</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
